{"version":3,"sources":["components/layout.js","pages/Contact.js","pages/Games.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","children","React","active","setActive","className","name","back","link","map","index","toUpperCase","to","onClick","Contact","id","type","required","rows","Card","game","releaseDate","date","Date","initialDay","getDay","day","toString","length","initialMonth","getMonth","month","year","getFullYear","formatDate","first_release_date","line","element","truncateText","text","summary","rating","toFixed","Games","gameList","setGameList","filteredList","setFilteredList","orderList","asc","setAsc","score","order","data","setData","axios","get","then","response","sort","a","b","e","event","direction","temp","target","toLowerCase","onSubmit","value","placeholder","onChange","filter","item","includes","Dropdown","onSelect","Toggle","variant","Menu","Item","style","display","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39eb60f2.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/layout.css\";\n\nconst Layout = ({ children }) => {\n  const linkList = [\n    { name: \"video games\", back: \"video\", link: \"/connect_now_exercise\" },\n    { name: \"contact\", back: \"contact\", link: \"/connect_now_exercise/contact\" },\n  ];\n  const [active, setActive] = React.useState(0);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <nav className=\"App-header\">\n          {linkList.map((link, index) => (\n            <div className=\"app-link\" key={index}>\n              <p className={`link-back ${active === index ? \"visible\" : \"\"}`}>\n                {link.back.toUpperCase()}\n              </p>\n              <Link className=\"link\" to={`${link.link}`} onClick={() => setActive(index)}>\n                {link.name.toUpperCase()}\n              </Link>\n            </div>\n          ))}\n        </nav>\n      </header>\n      {children}\n    </div>\n  );\n};\n\nexport default Layout;\n","import * as React from \"react\";\nimport \"../styles/contact.css\";\n\nconst ipsum =\n  \"Tempus quam pellentesque nec nam aliquam. Euismod elementum nisi quis eleifend quam adipiscing vitae proin sagittis. Tristique sollicitudin nibh sit amet commodo nulla facilisi.\";\n\nconst Contact = () => {\n  return (\n    <main className=\"contact-main\">\n      <div className=\"contact\">\n        <h4 id=\"contact-title\">{\"get in touch\".toUpperCase()}</h4>\n        <p id=\"contact-summary\">{ipsum}</p>\n\n        <form className=\"form contact-form\">\n          <h5>{\"Contact Form\"}</h5>\n\n          <label id=\"name-label\">\n            Name <em className=\"blue\">*</em>\n          </label>\n          <input id=\"name-input\" type=\"text\" required />\n\n          <label id=\"email-label\">\n            Email Address <em className=\"blue\">*</em>\n          </label>\n          <input id=\"email-input\" type=\"email\" required />\n\n          <label id=\"message-label\">\n            Message <em className=\"blue\">*</em>\n          </label>\n          <textarea id=\"message-input\" required rows={3} />\n\n          <button id=\"contact-button\" type=\"submit\">\n            Send\n          </button>\n        </form>\n      </div>\n    </main>\n  );\n};\n\nexport default Contact;\n","import * as React from \"react\";\nimport \"../styles/games.css\";\nimport axios from \"axios\";\nimport TextTruncate from \"react-text-truncate\";\nimport { Dropdown } from \"react-bootstrap\";\nimport { FiArrowUp, FiArrowDown } from \"react-icons/fi\";\n\nconst Card = ({ game }) => {\n  const formatDate = (releaseDate) => {\n    const date = new Date(releaseDate);\n\n    const initialDay = date.getDay() + 1;\n    const day =\n      initialDay.toString().length === 1 ? `0${initialDay}` : initialDay;\n\n    const initialMonth = date.getMonth() + 1;\n    const month =\n      initialMonth.toString().length === 1 ? `0${initialMonth}` : initialMonth;\n\n    const year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  return (\n    <article className=\"game-card\">\n      <div className=\"game-image\" />\n      <div className=\"game-content\">\n        <h4 className=\"game-name\">{game.name}</h4>\n        <p className=\"game-date\">{`Release Date: ${formatDate(\n          game.first_release_date\n        )}`}</p>\n        <div className=\"game-summary\">\n          <TextTruncate\n            line={3}\n            element=\"span\"\n            truncateText=\"â€¦\"\n            text={game.summary}\n          />\n        </div>\n      </div>\n      <div className=\"game-rating\">\n        <p>{(+game.rating / 10).toFixed(0)}</p>\n      </div>\n    </article>\n  );\n};\n\nconst Games = () => {\n  const [gameList, setGameList] = React.useState([]);\n  const [filteredList, setFilteredList] = React.useState([]);\n  const orderList = [\"Release Date\", \"Score\", \"Name\"];\n  const [asc, setAsc] = React.useState(true);\n  const [data, setData] = React.useState({\n    name: \"\",\n    score: \"\",\n    order: 0,\n  });\n\n  React.useEffect(() => {\n    axios\n      .get(\"https://public.connectnow.org.uk/applicant-test/\")\n      .then((response) => {\n        setGameList(\n          response.data.sort(\n            (a, b) => b.first_release_date - a.first_release_date\n          )\n        );\n        setFilteredList(\n          response.data.sort(\n            (a, b) => b.first_release_date - a.first_release_date\n          )\n        );\n      });\n  }, []);\n\n  const filterByName = (event) => {\n    const name = event.target.name;\n    const value = event.target.value.toLowerCase();\n    setFilteredList(\n      gameList.filter((item) => item.name.toLowerCase().includes(value))\n    );\n    setData({ ...data, [name]: value });\n  };\n\n  const filterByScore = (event) => {\n    const name = event.target.name;\n    const value = event.target.value.toLowerCase();\n    setFilteredList(\n      gameList.filter((item) => (+item.rating / 10).toFixed(0) >= +value)\n    );\n    setData({ ...data, [name]: value });\n  };\n\n  const sort = (e, event) => {\n    let order = data.order;\n    let direction = asc;\n    let temp = [];\n\n    if (event) {\n      order = +event.target.name;\n      setData({ ...data, order: order });\n    }\n\n    if (e != null) {\n      direction = e;\n    }\n\n    switch (order) {\n      case 0:\n        //latest to earliest\n        if (direction) {\n          temp = filteredList.sort(\n            (a, b) => b.first_release_date - a.first_release_date\n          );\n        } else {\n          temp = filteredList.sort(\n            (a, b) => a.first_release_date - b.first_release_date\n          );\n        }\n        break;\n\n      case 1:\n        if (direction) {\n          temp = filteredList.sort((a, b) => b.rating - a.rating);\n        } else {\n          temp = filteredList.sort((a, b) => a.rating - b.rating);\n        }\n        break;\n\n      case 2:\n        if (direction) {\n          temp = filteredList.sort((a, b) =>\n            a.name.toLowerCase() > b.name.toLowerCase() ? 1 : -1\n          );\n        } else {\n          temp = filteredList.sort((a, b) =>\n            a.name.toLowerCase() < b.name.toLowerCase() ? 1 : -1\n          );\n        }\n        break;\n\n      default:\n        temp = filteredList.sort(\n          (a, b) => b.first_release_date - a.first_release_date\n        );\n    }\n    setFilteredList(temp);\n  };\n\n  const orderDirection = (order) => {\n    setAsc(order);\n    sort(order);\n  };\n  \n  const reset = () => {\n    setFilteredList(gameList);\n    setData({\n      name: \"\",\n      score: \"\",\n      order: 0,\n    });\n  };\n\n  return (\n    <main className=\"filter-main\">\n      <div className=\"form\">\n        <form className=\"filter-form\" onSubmit={() => false}>\n          <h4 id=\"filter-heading\">Filter Results</h4>\n\n          <label id=\"name-label\">Name [contains]</label>\n          <input\n            id=\"name-input\"\n            type=\"text\"\n            name=\"name\"\n            value={data.name}\n            placeholder=\"Text String\"\n            onChange={filterByName}\n          />\n\n          <label id=\"score-label\">Minimum Score</label>\n          <input\n            id=\"score-input\"\n            type=\"number\"\n            name=\"score\"\n            value={data.score}\n            placeholder=\"1-10\"\n            onChange={filterByScore}\n          />\n\n          <label id=\"order-label\">Order By</label>\n          <div id=\"order-input\">\n\n            <button id=\"icon-button\" type=\"button\" onClick={() => orderDirection(!asc)}>\n              {asc ? <FiArrowUp /> : <FiArrowDown />}\n            </button>\n          \n            <Dropdown onSelect={sort}>\n              <Dropdown.Toggle variant=\"success\" id=\"filter-dropdown\">\n                {orderList[data.order]}\n              </Dropdown.Toggle>\n\n              <Dropdown.Menu id=\"dropdown-menu\">\n                {orderList.map((order, index) => (\n                  <Dropdown.Item\n                    key={index}\n                    style={{\n                      display: +index === +data.order ? \"none\" : \"block\",\n                    }}\n                    name={index}\n                  >\n                    {order}\n                  </Dropdown.Item>\n                ))}\n              </Dropdown.Menu>\n            </Dropdown>\n          </div>\n\n          <button id=\"clear-button\" type=\"reset\" onClick={reset}>\n            Clear\n          </button>\n        </form>\n      </div>\n\n      <section className=\"game-container\">\n        {filteredList.map((game, index) => (\n          <Card game={game} key={index} />\n        ))}\n      </section>\n    </main>\n  );\n};\n\nexport default Games;\n","import * as Router from \"react-router-dom\";\nimport \"./App.css\";\nimport Layout from \"./components/layout\";\nimport Contact from \"./pages/Contact\";\nimport Games from \"./pages/Games\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <Router.BrowserRouter>\n      <Layout>\n        <Router.Switch>\n          <Router.Route exact path={\"/connect_now_exercise\"} component={Games} />\n          <Router.Route exact path={\"/connect_now_exercise/contact\"} component={Contact} />\n        </Router.Switch>\n      </Layout>\n    </Router.BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}